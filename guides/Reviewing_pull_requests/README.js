Ext.data.JsonP['Reviewing_pull_requests']({"guide":"<?xml version='1.0' encoding='utf-8'?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n        \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<title>Reviewing pull requests</title>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n<meta content=\"Scroll EclipseHelp Exporter\" name=\"generator\" />\n<link type=\"text/css\" rel=\"stylesheet\" />\n<link type=\"text/css\" rel=\"stylesheet\" />\n<link type=\"text/css\" rel=\"stylesheet\" media=\"print\" />\n</head>\n<body>\n<div class=\"container\">\n<div class=\"header\"></div>\n<div id=\"37551424\" class=\"content\"><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=37551424\"><span>Edit</span></a>\n<h1>Reviewing pull requests</h1>\n<p>\nAn important way you can help move Titanium forward is to review the changes that others have submitted. Proper functional testing helps us merge changes more quickly and with more confidence.    </p>\n<p>\nThis document describes the process you can follow to test any of the &quot;NPM-installable&quot; projects, including Alloy and the CLI. While you could test PRs for the Titanium SDK itself, that would also involve <a class=\"document-link \" href=\"#!/guide/Building_the_Titanium_SDK_From_Source\" Building_the_Titanium_SDK_From_Source.html=\"Building_the_Titanium_SDK_From_Source.html\">Building the Titanium SDK From Source</a> which is covered elsewhere in the documentation.     </p>\n<div class=\"section section-2 \" id=\"37551424_Reviewingpullrequests-One-timesetup:\">\n<h2 class=\"heading \"><span>One-time setup:</span></h2>\n<ol class=\" \"><li class=\" \"> <p>\nClone the project repo to a local directory. For example, for Alloy you would use <tt class=\" \">git clone https://github.com/appcelerator/alloy.git</tt> (you can't do this with your fork of the project)    </p>\n</li><li class=\" \"> <p>\nIn the resulting directory, open the <strong class=\" \">.git/config</strong> file in your text editor.    </p>\n</li><li class=\" \"> <p>\nFollow the instructions at <a class=\"external-link external-link\" href=\"https://help.github.com/articles/checking-out-pull-requests-locally\" target=\"_blank\">https://help.github.com/articles/checking-out-pull-requests-locally</a> to modify your git configuration to support fetching pull requests    </p>\n</li></ol> <p>\n<span style=\"color: #000000;\">\nCheckout a PR    </span>\n</p>\n<p>\nGitHub for Mac (or Windows) users, you'll see a button to check out the PR directly from the GitHub repo page. This will work only if you have write access to the repo. (You can check out <a class=\"external-link external-link\" href=\"https://github.com/blog/1582-checking-out-pull-requests\" target=\"_blank\">https://github.com/blog/1582-checking-out-pull-requests</a> for more details.) Sorry, you're going to have to use the command-line for this:    </p>\n<ol class=\" \"><li class=\" \"> <p>\nUpdate your local repo with <tt class=\" \">git fetch origin</tt> (which will also fetch all the PRs).    </p>\n</li><li class=\" \"> <p>\nCheck out the specific PR using <tt class=\" \">git checkout pull/origin/999 -b 999</tt> where 999 is the PR number (the -b 999 creates a new local branch named after the PR)    </p>\n</li><li class=\" \"> <p>\nInstall from your local branch: [<tt class=\" \">sudo]</tt><tt class=\" \"> npm install -g .</tt> (with the dot at the end). You&rsquo;re ready now to do your testing, etc.    </p>\n</li></ol> <p>\n<span style=\"color: #000000;\">\nFunctional Review testing    </span>\n</p>\n<p>\nTickets should contain a description of what steps should be followed to review the changes. Alloy tickets, for example, should note a sample app (either attached to the PR or to the ticket). Run that app and confirm it displays the expected behavior.    </p>\n<p>\nOptionally, you could build one of your own projects with the PR version. This could uncover issues that might be missed by the simple test case app included on the ticket.    </p>\n<p>\nWhen you're done, add a comment on the ticket (preferred) or pull request. If all works fine, a simple &quot;FR passes&quot; comment will suffice. If there are errors or if the feature doesn't work as expected, please post detailed comments including any error messages    </p>\n<p>\n<span style=\"color: #000000;\">\nPost FR cleanup    </span>\n</p>\n<ol class=\" \"><li class=\" \"> <p>\nInstall the release version again. E.g. [<tt class=\" \">sudo]</tt><tt class=\" \"> npm install -g alloy</tt> </p>\n</li><li class=\" \"> <p>\nSwitch to your master branch: <tt class=\" \">git checkout master</tt> </p>\n</li><li class=\" \"> <p>\nFinally, force-delete your local PR branch: <tt class=\" \">git branch -D 999</tt> (this will destroy any changes you made to the files)    </p>\n</li></ol> <p>\n<span style=\"color: #000000;\">\nAlloy's jake app runner    </span>\n</p>\n<p>\nAlloy includes the jake (JavaScript make) utility, which you can use this to run any of the PR test apps, as well as the sample/demo apps included in the repo. For example, from your local Alloy repo directory:    </p>\n<pre class=\" \">jake app:run dir=ALOY-1234 // to run the app in test/apps/testing/ALOY-1234<br />jake app:run dir=basics/simple // to run the test/apps/basics/simple demo app</pre><pre class=\" \">// additional command-line options are:<br />platform=android   // to build for android,ios,mobileweb,blackberry<br />tiversion=3.2.2.GA  // to build using a specific SDK version (must match tiapp.xml)(<br />tisdk=&lt;path_to_sdk&gt;</pre><pre class=\" \">// e.g.<br />jake app:run dir=ALOY-1234 platform=android tiversion=3.2.2.GA</pre> <p>\nThe resulting app will be installed to your simulator/emulator under the name <strong class=\" \">Harness</strong>. You can import the Harness app into Studio to build for other platforms, install to device, etc. The Harness app is wiped with each jake app:run command.    </p>\n<p>\n</p>\n<p>\n</p>\n</div>\n</div>\n<div class=\"footer\">\n            Created with <a href=\"http://k15t.com/display/web/Scroll-Wiki-EclipseHelp-Exporter-for-Confluence\" target=\"_blank\">Scroll EclipseHelp Exporter for Confluence</a>.\n        </div>\n</div>\n</body>\n</html>\n","title":"Reviewing pull requests"});