Ext.data.JsonP['Theme_Actions']({"guide":"<?xml version='1.0' encoding='utf-8'?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n        \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<title>Theme Actions</title>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n<meta content=\"Scroll EclipseHelp Exporter\" name=\"generator\" />\n<link type=\"text/css\" rel=\"stylesheet\" />\n<link type=\"text/css\" rel=\"stylesheet\" />\n<link type=\"text/css\" rel=\"stylesheet\" media=\"print\" />\n</head>\n<body>\n<div class=\"container\">\n<div class=\"header\"></div>\n<div id=\"31523365\" class=\"content\"><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=31523365\"><span>Edit</span></a>\n<h1>Theme Actions</h1>\n<div class=\"section section-2 \" id=\"31523365_ThemeActions-Actions\">\n<h2 class=\"heading \"><span>Actions</span></h2>\n<ul class=\"toc-indentation \"><li class=\" \"> <p>\n<a class=\"document-link \" href=\"#!/guide/Theme_Actions-section-31523365_ThemeActions-Requirements\" Theme_Actions.html#31523365_ThemeActions-Requirements=\"Theme_Actions.html#31523365_ThemeActions-Requirements\">Requirements</a> </p>\n</li><li class=\" \"> <p>\n<a class=\"document-link \" href=\"#!/guide/Theme_Actions-section-31523365_ThemeActions-Description\" Theme_Actions.html#31523365_ThemeActions-Description=\"Theme_Actions.html#31523365_ThemeActions-Description\">Description</a> </p>\n</li><li class=\" \"> <p>\n<a class=\"document-link \" href=\"#!/guide/Theme_Actions-section-31523365_ThemeActions-Invocation\" Theme_Actions.html#31523365_ThemeActions-Invocation=\"Theme_Actions.html#31523365_ThemeActions-Invocation\">Invocation</a> </p>\n</li><li class=\" \"> <p>\n<a class=\"document-link \" href=\"#!/guide/Theme_Actions-section-31523365_ThemeActions-Getallavailablethemes\" Theme_Actions.html#31523365_ThemeActions-Getallavailablethemes=\"Theme_Actions.html#31523365_ThemeActions-Getallavailablethemes\">Get all available themes</a> </p>\n</li><li class=\" \"> <p>\n<a class=\"document-link \" href=\"#!/guide/Theme_Actions-section-31523365_ThemeActions-Gettheactivethemename\" Theme_Actions.html#31523365_ThemeActions-Gettheactivethemename=\"Theme_Actions.html#31523365_ThemeActions-Gettheactivethemename\">Get the active theme name</a> </p>\n</li><li class=\" \"> <p>\n<a class=\"document-link \" href=\"#!/guide/Theme_Actions-section-31523365_ThemeActions-Setanactivetheme\" Theme_Actions.html#31523365_ThemeActions-Setanactivetheme=\"Theme_Actions.html#31523365_ThemeActions-Setanactivetheme\">Set an active theme</a> </p>\n</li><li class=\" \"> <p>\n<a class=\"document-link \" href=\"#!/guide/Theme_Actions-section-31523365_ThemeActions-Sampleofuse\" Theme_Actions.html#31523365_ThemeActions-Sampleofuse=\"Theme_Actions.html#31523365_ThemeActions-Sampleofuse\">Sample of use</a> </p>\n</li></ul> </div>\n<div class=\"section section-2 \" id=\"31523365_ThemeActions-Requirements\">\n<h2 class=\"heading \"><span>Requirements</span></h2>\n<p>\nThe examples in this page use the <i class=\" \"><strong class=\" \">Prototype</strong></i> library, which is included by default inside a portal. However, the same concepts may be applied using other implementations.    </p>\n</div>\n<div class=\"section section-2 \" id=\"31523365_ThemeActions-Description\">\n<h2 class=\"heading \"><span>Description</span></h2>\n<p>\nThese set of actions can retrieve a Theme information from the Studio. This includes getting a list of available themes, getting the active theme, and setting the active theme.    </p>\n</div>\n<div class=\"section section-2 \" id=\"31523365_ThemeActions-Invocation\">\n<h2 class=\"heading \"><span>Invocation</span></h2>\n<p>\nThis command is executed immediately in a synchronous way.    </p>\n</div>\n<div class=\"section section-2 \" id=\"31523365_ThemeActions-Getallavailablethemes\">\n<h2 class=\"heading \"><span>Get all available themes</span></h2>\n<p>\nThe following <i class=\" \">dispatch</i> call will get a names array of all the available Themes names:    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\">var allThemes = dispatch($H({</code></div>\n<div class=\"line\"><code class=\"plain\">  controller : </code><code class=\"string\">'portal.themes'</code><code class=\"plain\">,</code></div>\n<div class=\"line\"><code class=\"plain\">  action : </code><code class=\"string\">\"getThemes\"</code></div>\n<div class=\"line\"><code class=\"plain\">}).toJSON()).evalJSON();</code></div>\n</div>\n</div> <p>\nThe returned value is an array of strings (names).    </p>\n</div>\n<div class=\"section section-2 \" id=\"31523365_ThemeActions-Gettheactivethemename\">\n<h2 class=\"heading \"><span>Get the active theme name</span></h2>\n<p>\nThe following <i class=\" \">dispatch</i> call will get the active theme name string:    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\">var activeTheme= dispatch($H({</code></div>\n<div class=\"line\"><code class=\"plain\">  controller : </code><code class=\"string\">'portal.themes'</code><code class=\"plain\">,</code></div>\n<div class=\"line\"><code class=\"plain\">  action : </code><code class=\"string\">\"getActiveTheme\"</code></div>\n<div class=\"line\"><code class=\"plain\">}).toJSON()).evalJSON();</code></div>\n</div>\n</div> </div>\n<div class=\"section section-2 \" id=\"31523365_ThemeActions-Setanactivetheme\">\n<h2 class=\"heading \"><span>Set an active theme</span></h2>\n<p>\nThe following code will set an active theme by passing a valid theme name.    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\">var result = dispatch($H({</code></div>\n<div class=\"line\"><code class=\"plain\">  controller : </code><code class=\"string\">'portal.themes'</code><code class=\"plain\">,</code></div>\n<div class=\"line\"><code class=\"plain\">  action : </code><code class=\"string\">\"setActiveTheme\"</code><code class=\"plain\">,</code></div>\n<div class=\"line\"><code class=\"plain\">  args   : </code><code class=\"string\">'[\"My-Theme\"]'</code></div>\n<div class=\"line\"><code class=\"plain\">}).toJSON()).evalJSON();</code></div>\n</div>\n</div> <p>\nThe <i class=\" \">result</i> value can be 'OK' or 'ERROR', which indicates if the operation was successful.    </p>\n</div>\n<div class=\"section section-2 \" id=\"31523365_ThemeActions-Sampleofuse\">\n<h2 class=\"heading \"><span>Sample of use</span></h2>\n<p>\nThis code lists all available themes in a dropdown list, select the active theme in the list, and allow switching a theme with a click of a button.    </p>\n<p>\nFrom <i class=\" \"><strong class=\" \"><a class=\"external-link external-link\" href=\"https://github.com/aptana/studio3-sdk\" target=\"_blank\">studio3-sdk</a></strong></i> repository (<i class=\" \">themes.js</i>)    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"preprocessor\">/**</code></div>\n<div class=\"line\"><code class=\"preprocessor\"> * Render the items that will display Theme information and control.</code></div>\n<div class=\"line\"><code class=\"preprocessor\"> */</code></div>\n<div class=\"line\"><code class=\"plain\">render : function() {</code></div>\n<div class=\"line\"><code class=\"plain\">  var themeDiv = $(</code><code class=\"string\">'themes'</code><code class=\"plain\">);</code></div>\n<div class=\"line\"><code class=\"plain\">  with (Elements.Builder) {</code></div>\n<div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">if</code><code class=\"plain\"> ( typeof (console) !== </code><code class=\"string\">'undefined'</code><code class=\"plain\"> &amp;&amp; typeof (dispatch) !== </code><code class=\"string\">'undefined'</code><code class=\"plain\">) {</code></div>\n<div class=\"line\"><code class=\"plain\">      console.log(</code><code class=\"string\">\"Dispatching the 'getThemes' action on the 'portal.themes' controller...\"</code><code class=\"plain\">);</code></div>\n<div class=\"line\"><code class=\"plain\">      var allThemes = dispatch($H({</code></div>\n<div class=\"line\"><code class=\"plain\">        controller : </code><code class=\"string\">'portal.themes'</code><code class=\"plain\">,</code></div>\n<div class=\"line\"><code class=\"plain\">        action : </code><code class=\"string\">\"getThemes\"</code></div>\n<div class=\"line\"><code class=\"plain\">      }).toJSON()).evalJSON();</code></div>\n<div class=\"line\"><code class=\"plain\">      console.log(</code><code class=\"string\">\"Dispatching the 'getActiveTheme' action on the 'portal.themes' controller...\"</code><code class=\"plain\">);</code></div>\n<div class=\"line\"><code class=\"plain\">      var activeTheme = dispatch($H({</code></div>\n<div class=\"line\"><code class=\"plain\">        controller : </code><code class=\"string\">'portal.themes'</code><code class=\"plain\">,</code></div>\n<div class=\"line\"><code class=\"plain\">        action : </code><code class=\"string\">\"getActiveTheme\"</code></div>\n<div class=\"line\"><code class=\"plain\">      }).toJSON()).evalJSON();</code></div>\n<div class=\"line\"><code class=\"plain\">      themeSelectElement = select();</code></div>\n<div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">for</code><code class=\"plain\"> (var i = </code><code class=\"value\">0</code><code class=\"plain\">; i &lt; allThemes.length; i++) {</code></div>\n<div class=\"line\"><code class=\"plain\">        var op = option(allThemes[i]);</code></div>\n<div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">if</code><code class=\"plain\"> (activeTheme == allThemes[i]) {</code></div>\n<div class=\"line\"><code class=\"plain\">          op.selected = </code><code class=\"keyword\">true</code><code class=\"plain\">;</code></div>\n<div class=\"line\"><code class=\"plain\">        }</code></div>\n<div class=\"line\"><code class=\"plain\">        themeSelectElement.appendChild(op);</code></div>\n<div class=\"line\"><code class=\"plain\">      }</code></div>\n<div class=\"line\"><code class=\"plain\">      themeDiv.appendChild(span(</code><code class=\"string\">\"Installed Themes: \"</code><code class=\"plain\">));</code></div>\n<div class=\"line\"><code class=\"plain\">      themeDiv.appendChild(themeSelectElement);</code></div>\n<div class=\"line\"><code class=\"plain\"> </code><code class=\"comments\">// Add a button to trigger a Theme change</code></div>\n<div class=\"line\"><code class=\"plain\">      var changeBt = button({</code></div>\n<div class=\"line\"><code class=\"plain\"> </code><code class=\"string\">'type'</code><code class=\"plain\"> : </code><code class=\"string\">'button'</code></div>\n<div class=\"line\"><code class=\"plain\">      }, </code><code class=\"string\">\"Change\"</code><code class=\"plain\">);</code></div>\n<div class=\"line\"><code class=\"plain\">      themeDiv.appendChild(changeBt);</code></div>\n<div class=\"line\"><code class=\"plain\">      changeBt.observe(</code><code class=\"string\">'click'</code><code class=\"plain\">, function(e) {</code></div>\n<div class=\"line\"><code class=\"plain\">        var item = themeSelectElement.options[themeSelectElement.selectedIndex].text;</code></div>\n<div class=\"line\"><code class=\"plain\">        console.log(</code><code class=\"string\">\"Dispatching the 'setActiveTheme' action on the 'portal.themes' controller with the value of \"</code><code class=\"plain\"> + item + </code><code class=\"string\">\"...\"</code><code class=\"plain\">);</code></div>\n<div class=\"line\"><code class=\"plain\">        dispatch($H({</code></div>\n<div class=\"line\"><code class=\"plain\">          controller : </code><code class=\"string\">'portal.themes'</code><code class=\"plain\">,</code></div>\n<div class=\"line\"><code class=\"plain\">          action : </code><code class=\"string\">\"setActiveTheme\"</code><code class=\"plain\">,</code></div>\n<div class=\"line\"><code class=\"plain\">          args : </code><code class=\"string\">'[\"'</code><code class=\"plain\"> + item + </code><code class=\"string\">'\"]'</code></div>\n<div class=\"line\"><code class=\"plain\">        }).toJSON()).evalJSON();</code></div>\n<div class=\"line\"><code class=\"plain\"> </code><code class=\"keyword\">return</code><code class=\"plain\"> </code><code class=\"keyword\">false</code><code class=\"plain\">;</code></div>\n<div class=\"line\"><code class=\"plain\">      });</code></div>\n<div class=\"line\"><code class=\"plain\">    }</code></div>\n<div class=\"line\"><code class=\"plain\">  }</code></div>\n<div class=\"line\"><code class=\"plain\">}</code></div>\n</div>\n</div> </div>\n</div>\n<div class=\"footer\">\n            Created with <a href=\"http://k15t.com/display/web/Scroll-Wiki-EclipseHelp-Exporter-for-Confluence\" target=\"_blank\">Scroll EclipseHelp Exporter for Confluence</a>.\n        </div>\n</div>\n</body>\n</html>\n","title":"Theme Actions"});