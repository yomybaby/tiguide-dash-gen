Ext.data.JsonP['Build_Configuration_File_(alloy.jmk)']({"guide":"<?xml version='1.0' encoding='utf-8'?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n        \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<title>Build Configuration File (alloy.jmk)</title>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n<meta content=\"Scroll EclipseHelp Exporter\" name=\"generator\" />\n<link type=\"text/css\" rel=\"stylesheet\" />\n<link type=\"text/css\" rel=\"stylesheet\" />\n<link type=\"text/css\" rel=\"stylesheet\" media=\"print\" />\n</head>\n<body>\n<div class=\"container\">\n<div class=\"header\"></div>\n<div id=\"35620079\" class=\"content\"><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=35620079\"><span>Edit</span></a>\n<h1>Build Configuration File (alloy.jmk)</h1>\n<p>\nAlloy provides hooks to customize the compilation process using a special JavaScript file called a JS Makefile (JMK). The file needs to be named <tt class=\" \">alloy.jmk</tt> and located in the project's <tt class=\" \">app</tt> directory. This file can be used for common administration tasks or to fine tune the build process. It will be loaded automatically by the Alloy command line during compilation.    </p>\n<p>\nExample of a JMK file:    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"title\">alloy.jmk</div>\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\"> </code></div>\n<div class=\"line\"><code class=\"plain\">task(</code><code class=\"string\">\"pre:compile\"</code><code class=\"plain\">,function(event,logger){</code></div>\n<div class=\"line\"><code class=\"plain\">    logger.showTimestamp = </code><code class=\"keyword\">true</code><code class=\"plain\">;</code></div>\n<div class=\"line\"><code class=\"plain\">    logger.info(</code><code class=\"string\">'building project at '</code><code class=\"plain\">+ event.dir.project);</code></div>\n<div class=\"line\"><code class=\"plain\">});</code></div>\n<div class=\"line\"><code class=\"plain\">task(</code><code class=\"string\">\"post:compile\"</code><code class=\"plain\">,function(event,logger){</code></div>\n<div class=\"line\"><code class=\"plain\">    logger.info(</code><code class=\"string\">'compile finished!'</code><code class=\"plain\">);</code></div>\n<div class=\"line\"><code class=\"plain\">});</code></div>\n</div>\n</div> <p>\nTo customize the build process, call the task function with the event name and provide a function callback, which will be called when the event is triggered by the compiler.    </p>\n<p>\nThese are the event names (or compiler tasks):    </p>\n<ul class=\" \"><li class=\" \"> <p>\n<tt class=\" \">pre:load:</tt> called after the project is cleaned and before copying any assets to the <tt class=\" \">Resources</tt> folder.    </p>\n</li><li class=\" \"> <p>\n<tt class=\" \">pre:compile</tt>: called before the compiler starts.    </p>\n</li><li class=\" \"> <p>\n<tt class=\" \">post:compile</tt>: called after the compiler finishes but before it exits.    </p>\n</li><li class=\" \"> <p>\n<tt class=\" \">compile:app.js</tt>: called just after the compilation of the main <tt class=\" \">app.js</tt> file but before the code is written to disk.    </p>\n</li></ul> <p>\nThe function callback provides two arguments: <tt class=\" \">event</tt> and <tt class=\" \">logger</tt>.    </p>\n<p>\nThe <tt class=\" \">event</tt> object provides a set of objects and values which may be useful for building tasks:    </p>\n<div class=\"tablewrap\">\n<table class=\"confluenceTable\">\n<thead class=\" \"> <tr>\n<td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n<p>\nObject/Value    </p>\n</td>\n<td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n<p>\nDescription    </p>\n</td>\n</tr>\n</thead><tfoot class=\" \"></tfoot><tbody class=\" \"> <tr>\n<td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n<p>\nadapters<br />(Array)    </p>\n</td>\n<td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n<p>\nList of adapters.    </p>\n</td>\n</tr>\n<tr>\n<td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n<p>\nalloyConfig<br />(Object)    </p>\n</td>\n<td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n<p>\nContains Alloy compiler configuration information.    </p>\n<ul class=\" \"><li class=\" \"> <p>\n<strong class=\" \">platform</strong> : either <tt class=\" \">android</tt>, <tt class=\" \">blackberry</tt>, <tt class=\" \">ios</tt>, or <tt class=\" \">mobileweb</tt>.    </p>\n</li><li class=\" \"> <p>\n<strong class=\" \">deploytype</strong> : compilation environment type: either development, test or production.    </p>\n</li><li class=\" \"> <p>\n<strong class=\" \">beautify</strong> : if set to <tt class=\" \">true</tt>, the output from UglifyJS will be beautified.    </p>\n</li></ul> </td>\n</tr>\n<tr>\n<td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n<p>\nautoStyle<br />(Boolean)    </p>\n</td>\n<td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n<p>\nIf set to <tt class=\" \">true</tt>, autostyle is enabled for the entire project.    </p>\n</td>\n</tr>\n<tr>\n<td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n<p>\ndependencies<br />(Object)    </p>\n</td>\n<td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n<p>\nValue of the <tt class=\" \">dependencies</tt> key in the <tt class=\" \">config.json</tt> file.    </p>\n</td>\n</tr>\n<tr>\n<td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n<p>\ndir<br />(Object)    </p>\n</td>\n<td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n<p>\nContains directory paths to various resources.    </p>\n<ul class=\" \"><li class=\" \"> <p>\n<strong class=\" \">home</strong> : absolute path to the Alloy project's <tt class=\" \">app</tt> directory.    </p>\n</li><li class=\" \"> <p>\n<strong class=\" \">project</strong> : absolute path to the Alloy project's root directory.    </p>\n</li><li class=\" \"> <p>\n<strong class=\" \">resources</strong> : absolute path to the Alloy project's <tt class=\" \">Resource</tt> directory.    </p>\n</li><li class=\" \"> <p>\n<strong class=\" \">resourcesAlloy</strong> : absolute path to the Alloy project's <tt class=\" \">Resource/alloy</tt> directory.    </p>\n</li><li class=\" \"> <p>\n<strong class=\" \">assets</strong> : absolute path to the Alloy project's assets.    </p>\n</li><li class=\" \"> <p>\n<strong class=\" \">config</strong> : absolute path to the Alloy project's config.    </p>\n</li><li class=\" \"> <p>\n<strong class=\" \">controllers</strong> : absolute path to the Alloy project's controllers.    </p>\n</li><li class=\" \"> <p>\n<strong class=\" \">migrations</strong> : absolute path to the Alloy project's migrations.    </p>\n</li><li class=\" \"> <p>\n<strong class=\" \">models</strong> : absolute path to the Alloy project's models.    </p>\n</li><li class=\" \"> <p>\n<strong class=\" \">styles</strong> : absolute path to the Alloy project's styles.    </p>\n</li><li class=\" \"> <p>\n<strong class=\" \">themes</strong> : absolute path to the Alloy project's themes.    </p>\n</li><li class=\" \"> <p>\n<strong class=\" \">views</strong> : absolute path to the Alloy project's views.    </p>\n</li><li class=\" \"> <p>\n<strong class=\" \">widgets</strong> : absolute path to the Alloy project's widgets.    </p>\n</li><li class=\" \"> <p>\n<strong class=\" \">builtins</strong> : absolute path to the Alloy tool builtins.    </p>\n</li><li class=\" \"> <p>\n<strong class=\" \">template</strong> : absolute path to the Alloy tool templates.    </p>\n</li></ul> </td>\n</tr>\n<tr>\n<td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n<p>\nsourcemap<br />(Boolean)    </p>\n</td>\n<td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n<p>\nIf <tt class=\" \">true</tt>, generates the source mapping files for use with the Studio debugger and other functions.<br />These files maps the generated Titanium files in the <tt class=\" \">Resources</tt> directory to the ones in the <tt class=\" \">app</tt> directory.    </p>\n</td>\n</tr>\n<tr>\n<td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n<p>\ntheme<br />(String)    </p>\n</td>\n<td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n<p>\nName of the theme being used.    </p>\n</td>\n</tr>\n<tr>\n<td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n<p>\ncode<br />(String)    </p>\n</td>\n<td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n<p>\n<strong class=\" \">Only present for the <tt class=\" \">compile:app.js</tt> task.</strong> Contains the contents of the <tt class=\" \">app.js</tt> file.    </p>\n</td>\n</tr>\n<tr>\n<td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n<p>\nappJSFile<br />(String)    </p>\n</td>\n<td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n<p>\n<strong class=\" \">Only present for the <tt class=\" \">compile:app.js</tt> task.</strong> Contains the the absolute path to the <tt class=\" \">app.js</tt> file.    </p>\n</td>\n</tr>\n</tbody> </table>\n</div>\n<p>\n</p>\n<p>\nThe <tt class=\" \">logger</tt> object provides a reference to the logger, which defines the following methods and properties:    </p>\n<div class=\"section section-2 \" id=\"35620079_BuildConfigurationFile(alloy.jmk)-Properties\">\n<h2 class=\"heading \"><span>Properties</span></h2>\n<p>\n<strong class=\" \">DEBUG</strong>: Number READONLY<br />Output all log messages.    </p>\n<p>\n<strong class=\" \">INFO</strong>: Number READONLY<br />Output all log messages except debug messages.    </p>\n<p>\n<strong class=\" \">WARN</strong>: Number READONLY<br />Output only warning and error log messages.    </p>\n<p>\n<strong class=\" \">ERROR</strong>: Number READONLY<br />Output only error log messages.    </p>\n<p>\n<strong class=\" \">NONE</strong>: Number READONLY<br />Disable log messages.    </p>\n<p>\n<strong class=\" \">logLevel</strong>: Number<br />Sets which log messages to output.    </p>\n<p>\n<strong class=\" \">showTimestamp</strong>: Boolean<br />If true, outputs timestamp with the log messages.    </p>\n<p>\n<strong class=\" \">stripColors</strong>: Boolean<br />If true, suppresses color output.    </p>\n</div>\n<div class=\"section section-2 \" id=\"35620079_BuildConfigurationFile(alloy.jmk)-Methods\">\n<h2 class=\"heading \"><span>Methods</span></h2>\n<p>\n<strong class=\" \">debug (String msg)</strong><br />Outputs a debug log message.    </p>\n<p>\nParameters:    </p>\n<ul class=\" \"><li class=\" \"> <p>\nmsg : String<br />Message to output.    </p>\n</li></ul> <p>\nReturns:    </p>\n<ul class=\" \"><li class=\" \"> <p>\nvoid    </p>\n</li></ul> <p>\n<strong class=\" \">info (String msg)</strong><br />Outputs an info log message.    </p>\n<p>\nParameters:    </p>\n<ul class=\" \"><li class=\" \"> <p>\nmsg : String<br />Message to output.    </p>\n</li></ul> <p>\nReturns:    </p>\n<ul class=\" \"><li class=\" \"> <p>\nvoid    </p>\n</li></ul> <p>\n<strong class=\" \">warn (String msg)</strong><br />Outputs a warning log message.    </p>\n<p>\nParameters:    </p>\n<ul class=\" \"><li class=\" \"> <p>\nmsg : String<br />Message to output.    </p>\n</li></ul> <p>\nReturns:    </p>\n<ul class=\" \"><li class=\" \"> <p>\nvoid    </p>\n</li></ul> <p>\n<strong class=\" \">error (String msg)</strong><br />Outputs an error log message.    </p>\n<p>\nParameters:    </p>\n<ul class=\" \"><li class=\" \"> <p>\nmsg : String<br />Message to output.    </p>\n</li></ul> <p>\nReturns:    </p>\n<ul class=\" \"><li class=\" \"> <p>\nvoid    </p>\n</li></ul> </div>\n</div>\n<div class=\"footer\">\n            Created with <a href=\"http://k15t.com/display/web/Scroll-Wiki-EclipseHelp-Exporter-for-Confluence\" target=\"_blank\">Scroll EclipseHelp Exporter for Confluence</a>.\n        </div>\n</div>\n</body>\n</html>\n","title":"Build Configuration File (alloy.jmk)"});