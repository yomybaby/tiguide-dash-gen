Ext.data.JsonP['Errors_Logging_In']({"guide":"<?xml version='1.0' encoding='utf-8'?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n        \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<title>Errors Logging In</title>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n<meta content=\"Scroll EclipseHelp Exporter\" name=\"generator\" />\n<link type=\"text/css\" rel=\"stylesheet\" />\n<link type=\"text/css\" rel=\"stylesheet\" />\n<link type=\"text/css\" rel=\"stylesheet\" media=\"print\" />\n</head>\n<body>\n<div class=\"container\">\n<div class=\"header\"></div>\n<div id=\"30083289\" class=\"content\"><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=30083289\"><span>Edit</span></a>\n<h1>Errors Logging In</h1>\n<div class=\"section section-2 \" id=\"30083289_ErrorsLoggingIn-Contents\">\n<h2 class=\"heading \"><span>Contents</span></h2>\n<p>\n</p>\n<ul class=\"toc-indentation \"><li class=\" \"> <p>\n<a class=\"document-link \" href=\"#!/guide/Errors_Logging_In-section-30083289_ErrorsLoggingIn-Overview\" Errors_Logging_In.html#30083289_ErrorsLoggingIn-Overview=\"Errors_Logging_In.html#30083289_ErrorsLoggingIn-Overview\">Overview</a> </p>\n</li><li class=\" \"> <p>\n<a class=\"document-link \" href=\"#!/guide/Errors_Logging_In-section-30083289_ErrorsLoggingIn-TroubleLoggingin\" Errors_Logging_In.html#30083289_ErrorsLoggingIn-TroubleLoggingin=\"Errors_Logging_In.html#30083289_ErrorsLoggingIn-TroubleLoggingin\">Trouble Logging in</a> </p>\n<ul class=\"toc-indentation \"><li class=\" \"> <p>\n<a class=\"document-link \" href=\"#!/guide/Errors_Logging_In-section-30083289_ErrorsLoggingIn-LaunchStudiofromtheCommandLine\" Errors_Logging_In.html#30083289_ErrorsLoggingIn-LaunchStudiofromtheCommandLine=\"Errors_Logging_In.html#30083289_ErrorsLoggingIn-LaunchStudiofromtheCommandLine\">Launch Studio from the Command Line</a> </p>\n</li><li class=\" \"> <p>\n<a class=\"document-link \" href=\"#!/guide/Errors_Logging_In-section-30083289_ErrorsLoggingIn-ChecktheLogFileforThrownExceptions\" Errors_Logging_In.html#30083289_ErrorsLoggingIn-ChecktheLogFileforThrownExceptions=\"Errors_Logging_In.html#30083289_ErrorsLoggingIn-ChecktheLogFileforThrownExceptions\">Check the Log File for Thrown Exceptions</a> </p>\n</li></ul></li></ul> </div>\n<div class=\"section section-2 \" id=\"30083289_ErrorsLoggingIn-Overview\">\n<h2 class=\"heading \"><span>Overview</span></h2>\n<p>\nIf you are unable to log in to Studio, please try the following diagnostic steps and then submit this as part of your question on the Q &amp; A forum.    </p>\n</div>\n<div class=\"section section-2 \" id=\"30083289_ErrorsLoggingIn-TroubleLoggingin\">\n<h2 class=\"heading \"><span>Trouble Logging in</span></h2>\n<div class=\"section section-3 \" id=\"30083289_ErrorsLoggingIn-LaunchStudiofromtheCommandLine\">\n<h3 class=\"heading \"><span>Launch Studio from the Command Line</span></h3>\n<ol class=\" \"><li class=\" \"> <p>\nTry the login command below on the command line:    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\">curl -v -d </code><code class=\"string\">\"un=XXXX&amp;pw=YYYY\"</code><code class=\"plain\"> https:</code><code class=\"comments\">//api.appcelerator.com/p/v1/sso-login</code></div>\n</div>\n</div> <p>\n(replacing XXXX and YYYY with your username and password. The username needs to be url-escaped, like user@company.com =&gt; user%40company.com)    </p>\n</li><li class=\" \"> <p>\nIf the above command returns success, try to run Studio from the command line and then log in. Check the generated exception log on the command line.    </p>\n<ol class=\" \"><li class=\" \"> <p>\nFrom Mac: open a terminal and run &quot;<strong class=\" \">&lt;install_dir&gt;/TitaniumStudio.app/Contents/MacOS/TitaniumStudio</strong>&quot; (by default, the installation directory is &quot;/Applications/Titanium Studio&quot;)    </p>\n</li><li class=\" \"> <p>\nFrom Windows: open a command prompt and run &quot;<strong class=\" \">&lt;install_dir&gt;\\TitaniumStudio.exe -consoleLog</strong>&quot; (by default, the installation directory is &quot;C:\\Users\\&lt;username&gt;\\AppData\\Local\\Titanium Studio&quot;)    </p>\n</li><li class=\" \"> <p>\nFrom Linux: open a terminal and run &quot;<strong class=\" \">&lt;install_dir&gt;/TitaniumStudio</strong>&quot;    </p>\n</li></ol></li></ol> </div>\n<div class=\"section section-3 \" id=\"30083289_ErrorsLoggingIn-ChecktheLogFileforThrownExceptions\">\n<h3 class=\"heading \"><span>Check the Log File for Thrown Exceptions</span></h3>\n<p>\nCheck the Studio log file to see if an exception was thrown when attempting to login. (See <a class=\"document-link \" href=\"#!/guide/Accessing_the_Log_File\" Accessing_the_Log_File.html=\"Accessing_the_Log_File.html\">Accessing the Log File</a> for details on how to access the log file.)    </p>\n<p>\nIf the exception generated is<strong class=\" \"> javax.net.ssl.SSLHandshakeException</strong>, <strong class=\" \">javax.net.ssl.SSLPeerUnverifiedException</strong> or <strong class=\" \">&quot;PKIX path building failed&quot;</strong>, it means that the required certificate could not be added to Java's certificate store. You need to manually download and import the necessary certificates.    </p>\n<p>\nFor <strong class=\" \">Appcelerator Studio</strong>, on an OS X system, run:    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\">openssl s_client -showcerts -connect dashboard.appcelerator.com:</code><code class=\"value\">443</code><code class=\"plain\"> &lt;/dev/</code><code class=\"keyword\">null</code><code class=\"plain\"> </code><code class=\"value\">2</code><code class=\"plain\">&gt;/dev/</code><code class=\"keyword\">null</code><code class=\"plain\">|openssl x509 -outform PEM &gt;dashboard.pem</code></div>\n<div class=\"line\"><code class=\"plain\">sudo keytool -</code><code class=\"keyword\">import</code><code class=\"plain\"> -keystore /System/Library/Java/Support/CoreDeploy.bundle/Contents/Home/lib/security/cacerts -alias dashboard -file dashboard.pem</code></div>\n</div>\n</div> <p>\nFor <strong class=\" \">Titanium Studio</strong>, on an OS X system, run:    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\">openssl s_client -showcerts -connect api.appcelerator.com:</code><code class=\"value\">443</code><code class=\"plain\"> &lt;/dev/</code><code class=\"keyword\">null</code><code class=\"plain\"> </code><code class=\"value\">2</code><code class=\"plain\">&gt;/dev/</code><code class=\"keyword\">null</code><code class=\"plain\">|openssl x509 -outform PEM &gt;mycertfile.pem</code></div>\n<div class=\"line\"><code class=\"plain\">sudo keytool -</code><code class=\"keyword\">import</code><code class=\"plain\"> -keystore /System/Library/Java/Support/CoreDeploy.bundle/Contents/Home/lib/security/cacerts -alias my_cert -file mycertfile.pem</code></div>\n</div>\n</div> <p>\nThe first command downloads the server certificate, and the second command imports it to system Java's cacerts store.    </p>\n<p>\n<strong class=\" \">Notes</strong>:    </p>\n<ul class=\" \"><li class=\" \"> <p>\nFor Windows systems, you do not need to prepend the command with <tt class=\" \">sudo</tt> and the Java cacerts path should be <tt class=\" \">%JAVA_HOME%/JRE/lib/security/cacerts</tt>.    </p>\n</li><li class=\" \"> <p>\nFor Linux systems, the Java cacerts path may vary. The common location is <tt class=\"plain plain \">/etc/ssl/certs/java/cacerts</tt>.    </p>\n</li></ul> <p>\nIf the above steps do not help to resolve the issue, you could also try the following:    </p>\n<ol class=\" \"><li class=\" \"> <p>\nDownload <a class=\"attachment-link \" href=\"attachments_37683930_1_InstallCert.jar\" attachments_37683930_1_InstallCert.jar=\"attachments_37683930_1_InstallCert.jar\">InstallCert.jar</a> to a local directory;    </p>\n</li><li class=\" \"> <p>\nCD into the directory and run &quot;java -classpath InstallCert.jar InstallCert api.appcelerator.com&quot;;    </p>\n</li><li class=\" \"> <p>\nIt should output the same exception stacktrace as above and detect what certificate needs to be added; enter '1'.    </p>\n</li></ol> <p>\nLet it run to the finish, and afterward, Java should be able to complete a handshake with the host, and you could verify by running the program again.    </p>\n<p>\n</p>\n</div>\n</div>\n</div>\n<div class=\"footer\">\n            Created with <a href=\"http://k15t.com/display/web/Scroll-Wiki-EclipseHelp-Exporter-for-Confluence\" target=\"_blank\">Scroll EclipseHelp Exporter for Confluence</a>.\n        </div>\n</div>\n</body>\n</html>\n","title":"Errors Logging In"});