Ext.data.JsonP['Trigger_on_Save']({"guide":"<?xml version='1.0' encoding='utf-8'?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n        \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<title>Trigger on Save</title>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n<meta content=\"Scroll EclipseHelp Exporter\" name=\"generator\" />\n<link type=\"text/css\" rel=\"stylesheet\" />\n<link type=\"text/css\" rel=\"stylesheet\" />\n<link type=\"text/css\" rel=\"stylesheet\" media=\"print\" />\n</head>\n<body>\n<div class=\"container\">\n<div class=\"header\"></div>\n<div id=\"30083221\" class=\"content\"><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=30083221\"><span>Edit</span></a>\n<h1>Trigger on Save</h1>\n<div class=\"section section-2 \" id=\"30083221_TriggeronSave-Contents\">\n<h2 class=\"heading \"><span>Contents</span></h2>\n<ul class=\"toc-indentation \"><li class=\" \"> <p>\n<a class=\"document-link \" href=\"#!/guide/Trigger_on_Save-section-30083221_TriggeronSave-Overview\" Trigger_on_Save.html#30083221_TriggeronSave-Overview=\"Trigger_on_Save.html#30083221_TriggeronSave-Overview\">Overview</a> </p>\n</li><li class=\" \"> <p>\n<a class=\"document-link \" href=\"#!/guide/Trigger_on_Save-section-30083221_TriggeronSave-TheCode\" Trigger_on_Save.html#30083221_TriggeronSave-TheCode=\"Trigger_on_Save.html#30083221_TriggeronSave-TheCode\">The Code</a> </p>\n</li><li class=\" \"> <p>\n<a class=\"document-link \" href=\"#!/guide/Trigger_on_Save-section-30083221_TriggeronSave-AnExample\" Trigger_on_Save.html#30083221_TriggeronSave-AnExample=\"Trigger_on_Save.html#30083221_TriggeronSave-AnExample\">An Example</a> </p>\n</li></ul> </div>\n<div class=\"section section-2 \" id=\"30083221_TriggeronSave-Overview\">\n<h2 class=\"heading \"><span>Overview</span></h2>\n<p>\nIn this recipe we show how a Ruble command can be triggered when an editor saves its content. This allows for processing to occur immediately after the file has been saved.    </p>\n</div>\n<div class=\"section section-2 \" id=\"30083221_TriggeronSave-TheCode\">\n<h2 class=\"heading \"><span>The Code</span></h2>\n<p>\nIn the snippet below, we register our command with the &quot;execution listener&quot;. When that listener encounters an event with the &quot;org.eclipse.ui.file.save&quot; id, the command will be triggered. Inside the invocation block, we see that the context contains an &quot;execution_listener&quot; property which is a hash of properties being sent with the event. All key/value pairs are emitted to the console. To perform your own post-save processing, simply replace the CONSOLE.puts line with the appropriate code.    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\">require </code><code class=\"string\">'ruble'</code></div>\n<div class=\"line\"><code class=\"plain\">bundle </code><code class=\"keyword\">do</code><code class=\"plain\"> |bundle|</code></div>\n<div class=\"line\"><code class=\"plain\">  bundle.author = </code><code class=\"string\">\"Kevin Lindsey\"</code></div>\n<div class=\"line\"><code class=\"plain\">  bundle.copyright = </code><code class=\"string\">\"Copyright 2001 Appcelerator, Inc. Distributed under the MIT license.\"</code></div>\n<div class=\"line\"><code class=\"plain\">  bundle.display_name = </code><code class=\"string\">\"Execute on Save\"</code></div>\n<div class=\"line\"><code class=\"plain\">  bundle.description = </code><code class=\"string\">\"A simple bundle showing how to trigger a command when editors save their content\"</code></div>\n<div class=\"line\"><code class=\"plain\">end</code></div>\n<div class=\"line\"><code class=\"plain\">command </code><code class=\"string\">\"Show Save Information\"</code><code class=\"plain\"> </code><code class=\"keyword\">do</code><code class=\"plain\"> |cmd|</code></div>\n<div class=\"line\"><code class=\"plain\">  cmd.input = :none</code></div>\n<div class=\"line\"><code class=\"plain\">  cmd.output = :discard</code></div>\n<div class=\"line\"><code class=\"plain\">  cmd.trigger = :execution_listener, </code><code class=\"string\">\"org.eclipse.ui.file.save\"</code></div>\n<div class=\"line\"><code class=\"plain\">  cmd.invoke </code><code class=\"keyword\">do</code><code class=\"plain\"> |ctx|</code></div>\n<div class=\"line\"><code class=\"plain\">    ctx.execution_listener.each {|k,v| CONSOLE.puts </code><code class=\"string\">\"Execution: #{k}=#{v}\"</code><code class=\"plain\">}</code></div>\n<div class=\"line\"><code class=\"plain\">  end</code></div>\n<div class=\"line\"><code class=\"plain\">end</code></div>\n</div>\n</div> <p>\nNOTE: In order to get an idea of what events are available, simply remove the &quot;org.eclipse.ui.file.save&quot; argument from the trigger assignment. This will cause the command to trigger for all execution listener events.    </p>\n</div>\n<div class=\"section section-2 \" id=\"30083221_TriggeronSave-AnExample\">\n<h2 class=\"heading \"><span>An Example</span></h2>\n<p>\nA script which takes the current file and makes a backup in a specific spot.    </p>\n<div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"confbox programlisting scroll-unprocessed\">\n<div class=\"defaultnew syntaxhighlighter\">\n<div class=\"line\"><code class=\"plain\">command </code><code class=\"string\">\"Backup Open Editor\"</code><code class=\"plain\"> </code><code class=\"keyword\">do</code><code class=\"plain\"> |cmd|</code></div>\n<div class=\"line\"><code class=\"plain\">  cmd.input = :document</code></div>\n<div class=\"line\"><code class=\"plain\">  cmd.output = :discard</code></div>\n<div class=\"line\"><code class=\"plain\">  cmd.trigger = :execution_listener, </code><code class=\"string\">\"org.eclipse.ui.file.save\"</code></div>\n<div class=\"line\"><code class=\"plain\">  cmd.invoke </code><code class=\"keyword\">do</code><code class=\"plain\"> |ctx|</code></div>\n<div class=\"line\"><code class=\"plain\">    backup_path = </code><code class=\"string\">\"/Users/ingo/Desktop/\"</code></div>\n<div class=\"line\"><code class=\"plain\">    source_path = ENV[</code><code class=\"string\">'TM_FILEPATH'</code><code class=\"plain\">]</code></div>\n<div class=\"line\"><code class=\"plain\">    # Strip name and extension to create a </code><code class=\"keyword\">new</code><code class=\"plain\"> backup file name.</code></div>\n<div class=\"line\"><code class=\"plain\">    # We use Unix milliseconds to provide the unique #</code></div>\n<div class=\"line\"><code class=\"plain\">    ext = File.extname(source_path)</code></div>\n<div class=\"line\"><code class=\"plain\">    filename = File.basename(source_path, ext)</code></div>\n<div class=\"line\"><code class=\"plain\">    destination_path =  backup_path + filename + </code><code class=\"string\">\"_\"</code><code class=\"plain\"> + Time.now.to_i.to_s + ext</code></div>\n<div class=\"line\"><code class=\"plain\">    # Copy the file name</code></div>\n<div class=\"line\"><code class=\"plain\">    CONSOLE.puts </code><code class=\"string\">\"Backing Up: \"</code><code class=\"plain\"> + source_path + </code><code class=\"string\">\" to \"</code><code class=\"plain\"> + destination_path</code></div>\n<div class=\"line\"><code class=\"plain\">    File.copy(source_path, destination_path) </code></div>\n<div class=\"line\"><code class=\"plain\">  end</code></div>\n<div class=\"line\"><code class=\"plain\">end</code></div>\n</div>\n</div> </div>\n</div>\n<div class=\"footer\">\n            Created with <a href=\"http://k15t.com/display/web/Scroll-Wiki-EclipseHelp-Exporter-for-Confluence\" target=\"_blank\">Scroll EclipseHelp Exporter for Confluence</a>.\n        </div>\n</div>\n</body>\n</html>\n","title":"Trigger on Save"});